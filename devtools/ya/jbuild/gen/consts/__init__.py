import os

import devtools.ya.test.const as tconst

# Roots
BUILD_ROOT = '$(BUILD_ROOT)'
BUILD_ROOT_SHORT = '$B'
SOURCE_ROOT = '$(SOURCE_ROOT)'


# Java modules
JAVA_PROGRAM = 'JAVA_PROGRAM'
JAVA_LIBRARY = 'JAVA_LIBRARY'
JAVA_TEST = 'JTEST'
JAVA_TEST_FOR = 'JTEST_FOR'
TESTNG = 'TESTNG'
JUNIT5 = 'JUNIT5'

# Macros & special words
JAVA_SRCS = 'JAVA_SRCS'
J_RESOURCE = 'RESOURCES'
J_SRCDIR = 'SRCDIR'
J_PACKAGE_PREFIX = 'PACKAGE_PREFIX'
J_EXCLUDE = 'EXCLUDE'
J_EXTERNAL = 'EXTERNAL'
JAVA_SRCS_WORDS = [J_RESOURCE, J_SRCDIR, J_PACKAGE_PREFIX, J_EXCLUDE, J_EXTERNAL]

EXTERNAL_JAR = 'EXTERNAL_JAR'
E_SOURCES = 'SOURCES'
E_WAR = 'WAR'
E_AAR = 'AAR'

# EXTERNAL_JAR file locations
E_SANDBOX = 1
E_LOCAL = 2
E_JDK = 3

MODULE_CLASSPATH = '$(MODULE_CLASSPATH)'

ADD_WAR = 'ADD_WAR'
W_EXPORTS = 'EXPORTS'
W_PREFIX = 'PREFIX'
W_INCLUDE = 'INCLUDE'
W_EXCLUDE = 'EXCLUDE'
W_INCLUDE_DEFAULT = 'INCLUDE_DEFAULT'
W_EXCLUDE_DEFAULT = 'EXCLUDE_DEFAULT'

T_DATA = 'TEST_DATA'
T_FORK_MODE = 'TEST_FORK_MODE'
T_SPLIT_FACTOR = 'SPLIT_FACTOR'
T_TIMEOUT = 'TIMEOUT'
T_SYSTEM_PROPERTIES = 'SYSTEM_PROPERTIES'
T_JVM_ARGS = 'JVM_ARGS'
T_JAVA_CLASSPATH_CMD_TYPE = 'JAVA_CLASSPATH_CMD_TYPE'
T_RUN_CWD = 'TEST_CWD'
T_TAG = 'TAG'
T_DEPENDS = 'DEPENDS'
T_PROPS_FILE = 'FILE'
T_TEST_SIZE = 'SIZE'

T_DEFAULT_TIMEOUT = 60
T_RUNNER_PATH = os.path.join('devtools', 'junit-runner')

T_JUNIT5_RUNNER_PATH = os.path.join('devtools', 'junit5-runner')

MANAGED_PEERS = 'MANAGED_PEERS'
MANAGED_PEERS_CLOSURE = 'MANAGED_PEERS_CLOSURE'
NON_NAMAGEABLE_PEERS = 'NON_NAMAGEABLE_PEERS'
EXCLUDE = 'EXCLUDE'
ANNOTATION_PROCESSOR = 'ANNOTATION_PROCESSOR'
NO_COMPILER_WARNINGS = 'NO_COMPILER_WARNINGS'

IDEA_EXCLUDE_DIRS = 'IDEA_EXCLUDE'
IDEA_RESOURCE_DIRS = 'IDEA_RESOURCE'
IDEA_MODULE_NAME = 'IDEA_MODULE_NAME'

EXTERNAL_DEPENDENCIES = 'EXTERNAL_DEPENDENCIES'

SONAR_PATH = os.path.join('contrib', 'java', 'org', 'sonarsource', 'scanner', 'cli', 'sonar-scanner-cli', '2.8')
SONAR_MAIN = 'org.sonarsource.scanner.cli.Main'
SONAR_PROPERTIES_FILENAME = 'sonar-project.properties'

ADD_DLLS_FROM_DEPENDS = 'ADD_DLLS_FROM_DEPENDS'
ERROR_PRONE = 'ERROR_PRONE'
UBERJAR = 'UBERJAR'
UBERJAR_PREFIX = 'UBERJAR_PREFIX'
UBERJAR_HIDE_EXCLUDE = 'UBERJAR_HIDE_EXCLUDE'
UBERJAR_PATH_EXCLUDE = 'UBERJAR_PATH_EXCLUDE'
UBERJAR_MANIFEST_TRANSFORMER_MAIN = 'UBERJAR_MANIFEST_TRANSFORMER_MAIN'
UBERJAR_MANIFEST_TRANSFORMER_ATTRIBUTE = 'UBERJAR_MANIFEST_TRANSFORMER_ATTRIBUTE'
UBERJAR_APPENDING_TRANSFORMER = 'UBERJAR_APPENDING_TRANSFORMER'
UBERJAR_SERVICES_RESOURCE_TRANSFORMER = 'UBERJAR_SERVICES_RESOURCE_TRANSFORMER'
DIRECT_DEPS_ONLY = 'DIRECT_DEPS_ONLY'

WITH_JDK = 'WITH_JDK'
JDK_DEFAULT_RESOURCE = 'JDK_DEFAULT_RESOURCE_GLOBAL'
JDK_FOR_TESTS_RESOURCE_PREFIX = 'JDK_FOR_TESTS'
JDK_RESOURCE_PREFIX = 'JDK_RESOURCE'
JDK_RESOURCE_SUFFIX = '_RESOURCE_GLOBAL'
JDK_VERSION_PREFIX = 'JDK'

GENERATE_SCRIPT = 'GENERATE_SCRIPT'
GENERATE_SCRIPT_OUT_FILE = 'OUT'
GENERATE_SCRIPT_TEMPLATE = 'TEMPLATE'
GENERATE_SCRIPT_PROPERTY_SEP = 'CUSTOM_PROPERTY'

MAVEN_GROUP_ID = 'MAVEN_GROUP_ID'
MAVEN_DEFAULT_GROUP = 'ru.yandex'

JAVAC_FLAGS = 'JAVAC_FLAGS'

JDK_MIN = 'JDK_MIN'
JDK_MAX = 'JDK_MAX'
JDK_VERSION = 'JDK_VERSION_INT'

# global resources
RESOURCE_WITH_JDK = 'WITH_JDK_RESOURCE_GLOBAL'
RESOURCE_UBERJAR = 'UBERJAR_RESOURCE_GLOBAL'
RESOURCE_ERROR_PRONE = 'ERROR_PRONE_RESOURCE_GLOBAL'
RESOURCE_JACOCO_AGENT = 'JACOCO_AGENT_RESOURCE_GLOBAL'
RESOURCE_KOTLIN_COMPILER = 'KOTLIN_COMPILER_RESOURCE_GLOBAL'
RESOURCE_GROOVY_COMPILER = 'GROOVY_COMPILER_RESOURCE_GLOBAL'
RESOURCE_JSTYLE_LIB = tconst.JSTYLE_RUNNER_LIB

LOCAL_JDK_FLAG = 'USE_SYSTEM_JDK'
LOCAL_JDK_FOR_TESTS_FLAG = 'USE_SYSTEM_JDK_FOR_TESTS'
LOCAL_UBERJAR_FLAG = 'USE_SYSTEM_UBERJAR'
LOCAL_ERROR_PRONE_FLAG = 'USE_SYSTEM_ERROR_PRONE'
LOCAL_JACOCO_AGENT_FLAG = 'USE_SYSTEM_JACOCO_AGENT'
LOCAL_KOTLIN_COMPILER_FLAG = 'USE_SYSTEM_KOTLIN_COMPILER'
LOCAL_GROOVY_COMPILER_FLAG = 'USE_SYSTEM_GROOVY_COMPILER'
LOCAL_JSTYLE_LIB_FLAG = 'USE_SYSTEM_JSTYLE_LIB'

# Artifact types
CLS = 10
SRC = 20
WAR = 30
AAR = 40

TEST_DATA_SANDBOX = 'TEST_DATA_SANDBOX'
TEST_DATA_ARCADIA = 'TEST_DATA_ARCADIA'
TEST_DATA_ARCADIA_TEST_DATA = 'TEST_DATA_ARCADIA_TEST_DATA'
IDEA_NODE = 'idea_node'

SAVE_JAVAC_GENERATED_SRCS_DIR = 'SAVE_JAVAC_GENERATED_SRCS_DIR'
SAVE_JAVAC_GENERATED_SRCS_TAR = 'SAVE_JAVAC_GENERATED_SRCS_TAR'

JAR_INCLUDE_FILTER = 'JAR_INCLUDE_FILTER'
JAR_EXCLUDE_FILTER = 'JAR_EXCLUDE_FILTER'

DR_RECENT_VERSIONS = 'JAVA_DEPENDENCY_DM_CHECK_RECENT'
DR_DIFFERENT_VERSIONS = 'JAVA_DEPENDENCY_DM_CHECK_DIFFERENT'
DR_RESOLVED_CONFLICTS = 'JAVA_DEPENDENCY_CHECK_RESOLVED_CONFLICTS'
DR_DEFAULT_VERSION = 'JAVA_DEPENDENCY_DEFAULT_VERSION'
DR_DIRECT = 'JAVA_DEPENDENCY_DIRECT'
DR_DM_REQUIRED = 'JAVA_DEPENDENCY_DM_REQUIRED'

FORBIDDEN_LIBRARIES = 'JAVA_FORBIDDEN_LIBRARIES'

WITH_KOTLIN = 'WITH_KOTLIN'
WITH_GROOVY = 'WITH_GROOVY'
KOTLIN_JVM_TARGET = 'KOTLIN_JVM_TARGET'
KOTLINC_FLAGS = 'KOTLINC_FLAGS'
KOTLINC_OPTS = 'KOTLINC_OPTS'


def java_module_names():
    return JAVA_PROGRAM, JAVA_LIBRARY, JAVA_TEST, JAVA_TEST_FOR, TESTNG, JUNIT5
